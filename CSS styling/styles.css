*, *::after, *::before{
    box-sizing: border-box;
}

:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)*.9);
}

body{
    background: radial-gradient(#ffffff 0%, #ccccff 64%);
    margin: 0;
}

.board{
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell{
    width: var(--cell-size);
    height: var(--cell-size);
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}


.cell.x,
.cell.circle{
    cursor: not-allowed;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}

.cell:nth-child(3n+1){
    border-left: none;
}

.cell:nth-child(3n+3){
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7){
    border-bottom: none;
}

.cell.x::before,                                            /*For color after clicking*/  /*Done here to ensure no overlap*/
.cell.x::after{
    background-color: red;
}

.cell.circle::before,
.cell.circle::after{
  background-color: green;
}

.board.x .cell:not(.x):not(.circle):hover::before,          /*For color during hover*/
.board.x .cell:not(.x):not(.circle):hover::after{
    background-color: rgba(255, 0, 0, 0.5);
}

.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: rgba(0, 255, 0, 0.6);
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,         /*hover to get x and ensure its not overlapped*/
.board.x .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    width: calc(var(--mark-size)* .15);
    height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{          /*hover to get x and ensure its not overlapped*/
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{           /*hover to get x and ensure its not overlapped*/
    transform: rotate(-45deg);
}

/* Circle follows the same logic as X */

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    border-radius: 50%;
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size)* .7);
    height: calc(var(--mark-size)* .7);
    background: linear-gradient(to bottom, #ffffff 0%, #ccccff 141%);
}

/*restart button*/

.winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button{
    border-radius: 15px;
    font-size: 2rem;
    font-family: "Trebuchet MS", Helvetica, sans-serif;
    background: linear-gradient(to bottom, #ffffff 0%, #999966 265%);
    border: 1px solid black;
    padding: 0.25em 0.5em;
    cursor: pointer;
}

.winning-message button:hover{                              /*Invert colors on hover*/
    background: linear-gradient(to bottom, #000000 0%, #ffffff 226%);;
    border-color: white;
    color: white;
    border-radius: 15px;
}

.winning-message.show{                                      /*Only displays when called*/
    display: flex;
}
